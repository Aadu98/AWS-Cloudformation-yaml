---
AWSTemplateFormatVersion: 2010-09-09
Description: Load Balancer backed by Auto scaling group.

Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to
  Subnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

Resources:
  #Creating Separate SSH security group for SSHing to the instances.
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22 from anywhere.
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
  
  AllowALBTrafficSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22 from anywhere.
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - FromPort: 80
        ToPort: 80
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref ALBSecurityGroup
      
  ALBSecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Inbound and outbound.
      VpcId: !Ref VPC
      #Allow HTTP traffic in at port 80 from anywhere.
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      #Allow all traffic out at any port.
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: -1
      
  myLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData: 
        #if You want extra EBS volume
        # BlockDeviceMappings:
        #   - DeviceName: /dev/xvdcz 
        #     Ebs:
        #       DeleteOnTermination: true
        #       Encrypted: true
        #       VolumeSize: 8
        #       VolumeType: gp2
        ImageId: ami-087c17d1fe0178315
        InstanceType: t2.micro
        KeyName: demo-virginia
        Monitoring: 
          Enabled: true
        SecurityGroupIds: 
          - !Ref SSHSecurityGroup
          - !Ref AllowALBTrafficSecurityGroup
        UserData:
          Fn::Base64:
            Fn::Sub: |
              #!/bin/bash
              # Use this for your user data (script from top to bottom)
              # install httpd (Linux 2 version)
              yum update -y
              yum install -y httpd
              systemctl start httpd
              systemctl enable httpd
              echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html  

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTragetGroup
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP

  MYASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: MYASG
      HealthCheckGracePeriod: 60
      VPCZoneIdentifier: !Ref Subnets
      DesiredCapacity: 2
      MaxSize: 5
      MinSize: 2
      HealthCheckType: ELB
      LaunchTemplate:
          LaunchTemplateId: !Ref myLaunchTemplate
          Version: 1
      TargetGroupARNs: 
          - !Ref DefaultTargetGroup
      
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: MyALB
      Subnets: !Ref Subnets
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !Ref ALBSecurityGroup
      Type: application 

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup